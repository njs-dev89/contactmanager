{"version":3,"sources":["components/layout/Header.js","context.js","components/contacts/Contact.js","components/contacts/Contacts.js","components/layout/TextInputGroup.js","components/contacts/AddContact.js","components/contacts/EditContact.js","components/pages/AboutUs.js","components/pages/PageNotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","branding","className","href","to","Context","React","createContext","Reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","axios","get","res","this","data","value","props","children","Component","Consumer","Contact","showContactDetails","onDeleteClick","a","delete","name","email","phone","onClick","style","cursor","bind","float","color","marginRight","Contacts","key","TextInputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newContact","post","history","push","EditContact","match","params","updContact","put","AboutUs","PageNotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.81535ec2.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Header({ branding }) {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark mb-3 py-0\">\r\n      <div className=\"container\">\r\n        <a className=\"navbar-brand\" href=\"#\">\r\n          <h1>{branding}</h1>\r\n        </a>\r\n\r\n        <ul className=\"navbar-nav ml-auto\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              <i className=\"fas fa-home mr-2\"></i>Home\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/contact/add\" className=\"nav-link\">\r\n              <i className=\"fas fa-plus mr-2\"></i>Add\r\n            </Link>\r\n          </li>\r\n\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              <i className=\"fas fa-question mr-2\"></i>About Us\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Context = React.createContext();\r\nconst Reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n    case \"ADD_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: [action.payload, ...state.contacts],\r\n      };\r\n    case \"UPDATE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.map((contact) =>\r\n          contact.id === action.payload.id\r\n            ? (contact = action.payload)\r\n            : contact\r\n        ),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport class Provider extends Component {\r\n  state = {\r\n    contacts: [],\r\n    dispatch: (action) => this.setState((state) => Reducer(state, action)),\r\n  };\r\n  async componentDidMount() {\r\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ contacts: res.data });\r\n  }\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const Consumer = Context.Consumer;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showContactDetails: false,\r\n  };\r\n  onDeleteClick = async (id, dispatch) => {\r\n    await axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({\r\n      type: \"DELETE_CONTACT\",\r\n      payload: id,\r\n    });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.contact;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card card-body mb-3\">\r\n              <h4>\r\n                Name: {name}{\" \"}\r\n                <i\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showContactDetails: !this.state.showContactDetails,\r\n                    })\r\n                  }\r\n                  className=\"fas fa-sort-down\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                ></i>\r\n                <i\r\n                  className=\"fas fa-times\"\r\n                  onClick={this.onDeleteClick.bind(this, id, value.dispatch)}\r\n                  style={{ cursor: \"pointer\", float: \"right\", color: \"red\" }}\r\n                ></i>\r\n                <Link to={`/contact/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-pencil-alt\"\r\n                    style={{\r\n                      cursor: \"pointer\",\r\n                      float: \"right\",\r\n                      color: \"black\",\r\n                      marginRight: \"1rem\",\r\n                    }}\r\n                  ></i>\r\n                </Link>\r\n              </h4>\r\n              {this.state.showContactDetails ? (\r\n                <ul className=\"list-group\">\r\n                  <li className=\"list-group-item\">Email: {email}</li>\r\n                  <li className=\"list-group-item\">Phone: {phone}</li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component, Fragment } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"../../context\";\r\n\r\nexport class Contacts extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {({ contacts }) => {\r\n          return (\r\n            <Fragment>\r\n              <h1 className=\"display-4 mb-4\">Contact List</h1>\r\n              {contacts.map((contact) => (\r\n                <Contact key={contact.id} contact={contact} />\r\n              ))}\r\n            </Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contacts;\r\n","import React from \"react\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction TextInputGroup({\r\n  label,\r\n  type,\r\n  name,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor=\"name\">{label}</label>\r\n      <input\r\n        type={type}\r\n        name={name}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TextInputGroup;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nexport class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"The Name Field is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"The Email Field is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"The Name Field is required\" } });\r\n      return;\r\n    }\r\n    const newContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newContact\r\n    );\r\n    dispatch({ type: \"ADD_CONTACT\", payload: res.data });\r\n\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h3>Add Contact</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name....\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Your Email....\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Your Phone No....\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" className=\"btn btn-dark btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddContact;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"../../context\";\r\nimport axios from \"axios\";\r\nimport TextInputGroup from \"../layout/TextInputGroup\";\r\n\r\nexport class EditContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  async componentDidMount() {\r\n    const { id } = this.props.match.params;\r\n    const res = await axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const contact = res.data;\r\n    this.setState({\r\n      name: contact.name,\r\n      email: contact.email,\r\n      phone: contact.phone,\r\n    });\r\n  }\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"The Name Field is required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"The Email Field is required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"The Name Field is required\" } });\r\n      return;\r\n    }\r\n    const { id } = this.props.match.params;\r\n    const updContact = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      updContact\r\n    );\r\n    dispatch({ type: \"UPDATE_CONTACT\", payload: res.data });\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <div className=\"card-header\">\r\n                <h3>Add Contact</h3>\r\n              </div>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, value.dispatch)}>\r\n                  <TextInputGroup\r\n                    label=\"Name\"\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    placeholder=\"Enter Name....\"\r\n                    value={this.state.name}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.name}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"Enter Your Email....\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.email}\r\n                  />\r\n\r\n                  <TextInputGroup\r\n                    label=\"Phone\"\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    placeholder=\"Enter Your Phone No....\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    error={this.state.errors.phone}\r\n                  />\r\n\r\n                  <input type=\"submit\" className=\"btn btn-dark btn-block\" />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditContact;\r\n","import React from \"react\";\r\n\r\nfunction AboutUs() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">About Contact Manager</h1>\r\n      <p className=\"lead\">Simple app to manage Contacts</p>\r\n      <p className=\"text-secondary\">Version 1.0.0</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AboutUs;\r\n","import React from \"react\";\r\n\r\nfunction PageNotFound() {\r\n  return (\r\n    <div>\r\n      <h1 className=\"display-4\">404 Page Not Found</h1>\r\n      <p className=\"lead\">Sorry, That Page does not exist</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PageNotFound;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport Header from \"./components/layout/Header\";\nimport Contacts from \"./components/contacts/Contacts\";\nimport AddContact from \"./components/contacts/AddContact\";\nimport EditContact from \"./components/contacts/EditContact\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport { Provider } from \"./context\";\nimport AboutUs from \"./components/pages/AboutUs\";\nimport PageNotFound from \"./components/pages/PageNotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header branding=\"Contact Manager\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Contacts} />\n              <Route exact path=\"/contact/add\" component={AddContact} />\n              <Route exact path=\"/contact/edit/:id\" component={EditContact} />\n              <Route exact path=\"/about\" component={AboutUs} />\n              <Route component={PageNotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}